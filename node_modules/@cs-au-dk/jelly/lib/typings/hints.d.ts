import { FilePath, LocationJSON } from "../misc/util";
export type RequestType = {
    file: FilePath;
};
export type ResponseType = {
    hints: HintsJSON;
    numForced: number;
    numForcedExceptions: number;
    moduleException: boolean;
    numStaticFunctions: number;
    staticRequires: Array<[string, string]>;
    totalCodeSize: number;
};
export type HintsJSON = {
    modules: Array<string>;
    functions: Array<LocationJSON>;
    reads: Array<ReadHint>;
    writes: Array<WriteHint>;
    requires: Array<RequireHint>;
    evals: Array<EvalHint>;
};
export type AllocType = "Object" | "Prototype" | "Function" | "Class" | "Array";
export interface ReadHint {
    loc: LocationJSON;
    prop?: string;
    valLoc: LocationJSON;
    valType: AllocType;
}
export interface WriteHint {
    type: "normal" | "get" | "set";
    loc: LocationJSON;
    baseLoc: LocationJSON;
    baseType: AllocType;
    prop: string;
    valLoc: LocationJSON;
    valType: AllocType;
}
export interface RequireHint {
    loc: LocationJSON;
    str: string;
}
export interface EvalHint {
    loc: LocationJSON;
    str: string;
}
