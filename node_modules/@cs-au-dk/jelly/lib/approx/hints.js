"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hints = void 0;
const util_1 = require("../misc/util");
const patching_1 = require("./patching");
class Hints {
    modules = [];
    moduleIndex = new Map();
    functions = new Set();
    reads = new Map();
    writes = new Map();
    requires = new Map();
    evals = new Map();
    addModule(m) {
        return (0, util_1.getOrSet)(this.moduleIndex, m, () => {
            this.modules.push(m);
            return this.modules.length - 1;
        });
    }
    addFunction(f) {
        this.functions.add(f);
    }
    addReadHint(h) {
        if (patching_1.APPROX_READ)
            (0, util_1.mapArrayAddNoDuplicates)(h.loc, h, this.reads, (v1, v2) => v1.prop === v2.prop && v1.valLoc === v2.valLoc && v1.valType === v2.valType);
    }
    addWriteHint(h) {
        if (patching_1.APPROX_WRITE)
            (0, util_1.mapArrayAddNoDuplicates)(h.loc, h, this.writes, (v1, v2) => v1.type === v2.type && v1.baseLoc === v2.baseLoc && v1.baseType === v2.baseType &&
                v1.prop === v2.prop && v1.valLoc === v2.valLoc && v1.valType === v2.valType);
    }
    addRequireHint(h) {
        (0, util_1.mapArrayAddNoDuplicates)(h.loc, h, this.requires, (v1, v2) => v1.str === v2.str);
    }
    addEvalHint(h) {
        (0, util_1.mapArrayAddNoDuplicates)(h.loc, h, this.evals, (v1, v2) => v1.str === v2.str);
    }
    toJSON() {
        return {
            modules: this.modules,
            functions: Array.from(this.functions),
            reads: Array.from(this.reads.values()).flat(),
            writes: Array.from(this.writes.values()).flat(),
            requires: Array.from(this.requires.values()).flat(),
            evals: Array.from(this.evals.values()).flat()
        };
    }
    clearHints() {
        this.reads.clear();
        this.writes.clear();
        this.requires.clear();
        this.evals.clear();
    }
}
exports.Hints = Hints;
//# sourceMappingURL=hints.js.map