import { HintsJSON } from "../typings/hints";
import { FilePath } from "../misc/util";
import { GlobalState } from "../analysis/globalstate";
import { Hints } from "./hints";
import { ApproxDiagnostics } from "./diagnostics";
export declare class ProcessManager {
    readonly a: GlobalState;
    private readonly p;
    readonly hints: Hints;
    numExecutions: number;
    numForced: number;
    numForcedExceptions: number;
    numModuleExceptions: number;
    numStaticFunctions: number;
    staticRequires: Map<string, Set<string>>;
    approxTime: number;
    totalCodeSize: number;
    private resultPromiseResolve;
    private timer;
    constructor(a?: GlobalState);
    analyzeFiles(files: Array<string>): Promise<void>;
    stop(): void;
    execute(file: FilePath): Promise<void>;
    add(newHints: HintsJSON): void;
    saveHintsToFile(file: string): void;
    printDiagnostics(): void;
    getDiagnostics(): ApproxDiagnostics;
    private getStaticFunctionsVisited;
    saveDiagnosticsToFile(file: string): void;
}
